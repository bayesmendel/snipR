% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bsnRelative.R
\name{bsnRelative}
\alias{bsnRelative}
\title{Run deduplication algorithm, separated by relative type.}
\usage{
bsnRelative(
  pedigrees,
  relative,
  requestID,
  isProband,
  keyVars,
  keyVars.male = NULL,
  keyVars.female = NULL,
  keyWt = NULL,
  blockVar = NULL,
  repSN = 1,
  windowSN = 2,
  keyLength,
  printRuntime = TRUE,
  seed = NULL
)
}
\arguments{
\item{pedigrees}{Pedigree data to deduplicate.}

\item{relative}{Relative type}

\item{requestID}{Column that has the ID for the family.}

\item{isProband}{Column that indicates the proband.}

\item{keyVars}{Character vector of column names for the variables in the sort key}

\item{keyVars.male}{Optional character vector of column names for the variables in the sort key
that are specific to males}

\item{keyVars.female}{Optional character vector of column names for the variables in the sort key
that are specific to females}

\item{keyWt}{Numeric vector of weights assigned to variables in the sort key, corresponding
to \code{keyVars}. If \code{NULL}, the standard deviations of the
variables in the data will be used as weights.}

\item{blockVar}{Vector of column names for the blocking variables, where families in different
blocks will not be considered when searching for duplicates.}

\item{repSN}{Number of iterations when sorting neighbors according to the sort key}

\item{windowSN}{Integer representing the size of the sliding window to use during sorted neighbors.}

\item{keyLength}{Numeric vector representing the number of key variables
(out of \code{c(keyVar.bin, keyVar.cont)}) to concatenate per sort key. If missing, the key
lengths will be randomly generated. The length of the vector should be \code{repSN}.}

\item{printRuntime}{If TRUE, will print the runtime}

\item{seed}{Seed}
}
\value{
An object of class \code{\link{Blocks}} containing the scored neighbor pairs.
}
\description{
This only runs a subset of the entire algorithm, only looking at one specific
relative type out of the 7. It also stops after obtaining the neighbors, and 
doesn't score them or split into duplicate entities. This is for the purpose of running the
algorithm in parallel.
}
